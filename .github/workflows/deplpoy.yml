name: Deploy to Synology Server

on:
  push:
    branches:
      - main # main 브랜치에 푸시할 때마다 배포

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install sshpass & rsync
        run: sudo apt-get install -y sshpass rsync

      - name: Set up SSH config
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n  StrictHostKeyChecking no\n" > ~/.ssh/config
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SYNOLOGY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Synology (using sshpass)
        env:
          SYNOLOGY_HOST: ${{ secrets.SYNOLOGY_HOST }}
        run: |
          # SSH 접속 및 Docker Compose 실행
          sshpass -p ${{ secrets.SYNOLOGY_PASSWORD }} ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SYNOLOGY_USERNAME }}@${{ secrets.SYNOLOGY_HOST }} << 'EOF'
            # 1. git 설치 여부 확인 및 설치
            sudo -S apt-get update <<< ${{ secrets.SYNOLOGY_PASSWORD }}
            sudo -S apt-get install -y git <<< ${{ secrets.SYNOLOGY_PASSWORD }}

            # 2. 작업 디렉토리 생성 및 이동
            mkdir -p ${{ secrets.DEPLOY_PATH }}
            cd ${{ secrets.DEPLOY_PATH }}

            # 3. git clone 또는 pull
            if [ -d "my-react-nest-app" ]; then
              cd my-react-nest-app
              sudo -S git pull origin main <<< ${{ secrets.SYNOLOGY_PASSWORD }}
            else
              sudo -S git clone https://github.com/raincoat98/my-react-nest-app.git <<< ${{ secrets.SYNOLOGY_PASSWORD }}
              cd my-react-nest-app
            fi

            # 4. Docker Compose 실행
            if [ -f "docker-compose.yml" ]; then
              sudo -S docker-compose down <<< ${{ secrets.SYNOLOGY_PASSWORD }}
              sudo -S docker-compose up --build -d <<< ${{ secrets.SYNOLOGY_PASSWORD }}
            else
              echo "Error: docker-compose.yml not found"
              exit 1
            fi
          EOF
