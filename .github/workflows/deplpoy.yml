name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install sshpass & rsync
        run: sudo apt-get install -y sshpass rsync

      - name: Set up SSH config
        env:
          SYNOLOGY_HOST: ${{ secrets.SYNOLOGY_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          SSH_PORT=${{ secrets.SSH_PORT }}
          if [ -z "$SSH_PORT" ]; then
            SSH_PORT=22
          fi

          ssh-keyscan -p $SSH_PORT $SYNOLOGY_HOST >> ~/.ssh/known_hosts

          echo "Host $SYNOLOGY_HOST" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy to Production
        env:
          SYNOLOGY_HOST: ${{ secrets.SYNOLOGY_HOST }}
          NODE_ENV: production
        run: |
          sshpass -p ${{ secrets.SYNOLOGY_PASSWORD }} ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SYNOLOGY_USERNAME }}@${{ secrets.SYNOLOGY_HOST }} 'bash -s' << 'EOF'

            # 작업 디렉토리로 이동
            cd /volume1/web/

            # git pull
            if [ -d "my-react-nest-app" ]; then
              cd my-react-nest-app
              git pull origin main
            else
              git clone https://github.com/raincoat98/my-react-nest-app.git
              cd my-react-nest-app
            fi

            # docker-compose 설치 확인 및 업데이트
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi

            # 기존 컨테이너 및 이미지 정리
            docker-compose down --rmi all --volumes --remove-orphans || true
            docker system prune -f

            # 프로덕션 환경 변수 설정
            export NODE_ENV=production

            # Docker Compose 실행
            if [ -f "docker-compose.prod.yml" ]; then
              docker-compose -f docker-compose.prod.yml up --build -d
            else
              echo "Error: docker-compose.prod.yml not found"
              exit 1
            fi

            # 배포 상태 확인
            echo "Checking deployment status..."
            sleep 10
            docker-compose ps
            docker-compose logs --tail=50

          EOF
