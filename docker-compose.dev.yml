version: "3"
services:
  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5173"
    volumes:
      - ./frontend/src:/app/src:ro
      - /app/node_modules
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - WDS_SOCKET_PORT=0
    depends_on:
      - backend

  backend:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5001:3000"
    volumes:
      - ./backend/src:/app/src:ro
      - /app/node_modules
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres

  postgres:
    image: postgres:17
    container_name: postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
